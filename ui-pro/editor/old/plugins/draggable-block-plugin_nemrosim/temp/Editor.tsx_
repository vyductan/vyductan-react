"use client";

import type { InitialConfigType } from "@lexical/react/LexicalComposer";
import { useMemo } from "react";
import { LexicalComposer } from "@lexical/react/LexicalComposer";
import { ContentEditable } from "@lexical/react/LexicalContentEditable";
import LexicalErrorBoundary from "@lexical/react/LexicalErrorBoundary";
import { RichTextPlugin } from "@lexical/react/LexicalRichTextPlugin";

import { ImageNode } from "./nodes/ImageNode";
import { DraggableBlockPlugin } from "./plugins/DraggableBlockPlugin_nemrosim";
import { DraggableWrapper } from "./plugins/DraggableBlockPlugin_nemrosim/DraggableWrapper";
import { HistoryPlugin } from "./plugins/history";
import { OnChangePlugin } from "./plugins/on-change";

export const Editor = () => {
  const CustomContentEditable = useMemo(() => {
    return (
      <DraggableWrapper>
        <div className="relative">
          <ContentEditable className="relative border-0 px-7 py-2 outline-0" />
        </div>
      </DraggableWrapper>
    );
  }, []);
  const CustomPlaceholder = useMemo(() => {
    return (
      <div
        style={{
          position: "absolute",
          top: 30,
          left: 30,
        }}
      >
        Enter some text...
      </div>
    );
  }, []);

  // const [floatingAnchorElem, setFloatingAnchorElem] =
  //   useState<HTMLDivElement | null>(null);
  //
  // const onRef = (_floatingAnchorElem: HTMLDivElement) => {
  //   if (_floatingAnchorElem !== null) {
  //     setFloatingAnchorElem(_floatingAnchorElem);
  //   }
  // };

  const initialConfig: InitialConfigType = {
    namespace: "Editor",
    nodes: [ImageNode],
    editable: true,
    theme: {
      text: {
        bold: "text-bold",
        italic: "text-italic",
        underline: "text-underline",
        code: "text-code",
        highlight: "text-highlight",
        strikethrough: "text-strikethrough",
        subscript: "text-subscript",
        superscript: "text-superscript",
      },
      heading: {
        // Flowbite examples: https://flowbite.com/docs/typography/headings/#heading-one-h1
        h1: "text-5xl font-extrabold dark:text-white",
        h2: "text-4xl font-bold dark:text-white",
        h3: "text-3xl font-bold dark:text-white",
        h4: "text-2xl font-bold dark:text-white",
        h5: "text-xl font-bold dark:text-white",
      },
    },
    onError: (error, editor) => {
      console.log("error", error, editor);
    },
  };

  return (
    <div className="p-6">
      <LexicalComposer initialConfig={initialConfig}>
        <RichTextPlugin
          contentEditable={CustomContentEditable}
          placeholder={CustomPlaceholder}
          ErrorBoundary={LexicalErrorBoundary}
        />
        <HistoryPlugin />
        {/* <OnChangePlugin /> */}
        <DraggableBlockPlugin />
        {/* {floatingAnchorElem ? ( */}
        {/*   <> */}
        {/*     <DraggableBlockPlugin anchorElem={floatingAnchorElem} /> */}
        {/*   </> */}
        {/* ) : ( */}
        {/*   "" */}
        {/* )} */}
      </LexicalComposer>
    </div>
  );
};
